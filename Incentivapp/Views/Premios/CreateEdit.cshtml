@{ 
    string method = ViewBag.Method;
    List<SelectListItem> idTipoPremio = (List<SelectListItem>)ViewBag.idTipoPremio;
}
@model Incentivapp.Models.Premio
<div class="row text-center">
    <div class="col-sm-8 offset-sm-2">
        <h2>@ViewBag.Msg</h2>
        <hr />
        @Html.ValidationSummary()
        @using (Html.BeginForm(method, "Premios", FormMethod.Post))
    {
        if (Model != null)
        {
            @Html.HiddenFor(x => x.idPremio);
    }
    <div class="form-group row">
        @Html.LabelFor(x => x.nombre, "Premio", new { @class = "col-sm-4 col-form-label" })
        <div class="col-sm-8">
            @Html.TextBoxFor(x => x.nombre, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.nombre)
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(x => x.valor, "Valor", new { @class = "col-sm-4 col-form-label" })
        <div class="col-sm-8">
            @Html.TextBoxFor(x => x.valor, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.valor)
        </div>
    </div>
    <div class="form-group row">
        @Html.LabelFor(x => x.idTipoPremio, "Tipo Premio", new { @class = "col-sm-4 col-form-label" })
        <div class="col-sm-8">
            @Html.DropDownListFor(x => x.idTipoPremio, idTipoPremio, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.idTipoPremio)
        </div>
    </div>
    <div class="col-sm-8 offset-sm-2">
        <button type="submit" class="btn btn-outline-primary">@ViewBag.Btn</button>
    </div>
}
    </div>
</div>



